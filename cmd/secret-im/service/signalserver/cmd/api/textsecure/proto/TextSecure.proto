/**
 * Copyright (C) 2013 - 2015 Open WhisperSystems
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
syntax = "proto3";
package textsecure;

//option java_package = "org.whispersystems.textsecuregcm.entities";
//option java_outer_classname = "MessageProtos";

message Envelope {
  enum Type {
    UNKNOWN             = 0;
    CIPHERTEXT          = 1;
    KEY_EXCHANGE        = 2;
    PREKEY_BUNDLE       = 3;
    RECEIPT             = 5;  //收据
    UNIDENTIFIED_SENDER = 6;
  }

   Type   type             = 1;
   string source           = 2;
   string sourceUuid       = 11;
   uint32 sourceDevice     = 7;
   string relay            = 3;
   uint64 timestamp        = 5;
   bytes  legacyMessage    = 6; // Contains an encrypted DataMessage XXX -- Remove after 10/01/15
   bytes  content          = 8; // Contains an encrypted Content
   string serverGuid       = 9;
   uint64 server_timestamp = 10;
}

message ProvisioningUuid {   //供应
   string uuid = 1;
}


message ServerCertificate {
  bytes certificate = 1;
  bytes signature   = 2;
}

message SenderCertificateMessage {
  string            sender        = 1;
  string            senderUuid    = 6;
  uint32            senderDevice  = 2;
  fixed64           expires       = 3;
  bytes             identityKey   = 4;
  ServerCertificate signer        = 5;
}




message MessageAction {
  enum Action {
    UNKNOWN                   = 0;
    ChannelCreate             = 1;
    ChannelEditTitle          = 2;
    ChannelEditPhoto          = 3;
    ChannelDeletePhoto        = 4;
    ChannelAddParticipant     = 5;
    ChannelDeleteParticipant  = 6;
    ChannelEditMessage        = 7;
    ChannelDeleteMessage      = 8;
  }

  Action action        = 1;
  string title         = 2;
  string photo         = 3;
  repeated string participants  = 4;
  int64  message_id    = 5;
  string operator      = 6;
}


message ChannelEnvelope {
  enum Type {
    UNKNOWN         = 0;
    MESSAGE         = 1;
    MESSAGE_SERVICE = 2;
  }

  Type          type             = 1;
  int64         id               = 2;
  string        channelId        = 3;
  string        sourceUuid       = 4;
  uint32        sourceDevice     = 5;
  string        relay            = 6;
  bytes         content          = 7; // Contains an encrypted Content
  MessageAction action           = 8;
  bool          deleted          = 9;
  uint64        timestamp        = 10;
  uint64        server_timestamp = 11;
}
