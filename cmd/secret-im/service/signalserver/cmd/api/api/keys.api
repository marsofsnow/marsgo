syntax = "v2"

type PreKeyx{
    KeyId int64 `json:"keyId"`
    PublicKey string `json:"publicKey"`
}
type SignedPrekeyx{
    Signature string  `json:"signature"`
    KeyId int64 `json:"keyId"`
    PublicKey string `json:"publicKey"`
}


type PutKeysReqx{
    IdentityKey string  `json:"identityKey"`
    SignedPreKey SignedPrekeyx `json:"signedPreKey"`
    PreKeys []PreKeyx `json:"preKeys"`
}

type GetKeysReq{
    Identifier string `path:"identifier"`
    DeviceId string `path:"deviceId"`
}


type PreKeyResponseItem{
    DeviceId int64 `json:"deviceId"`
    RegistrationId int64 `json:"registrationId"`
    PreKey PreKeyx `json:"preKey"`
    SignedPrekey SignedPrekeyx `json:"signedPreKey"`

}
type GetKeysResx{
    IdentityKey string `json:"identityKey"`
    Devices []PreKeyResponseItem `json:"devices"`
}

type PreKeyCount {
    Count int `json:"count"`
}

type PutProfileKeyReq{
    accountName string `path:"accountName"`
    profilekey string `json:"profileKey"`
}

type GetProfileKeyReq{
    accountName string `path:"accountName"`

}

type GetProfileKeyRes{
    profilekey string `json:"profileKey"`
    Uuid string `json:"uuid"`
    accountName string `path:"accountName"`
}


@server(
    //jwt: Auth
    middleware : CheckBasicAuth
    group: textsecret_keys

)
service signalserver-api {
    @handler PutKeysHandler
    put  /v2/keys (PutKeysReqx) returns ()

    @handler GetKeysHandler
    get /v2/keys/:identifier/:deviceId (GetKeysReq) returns (GetKeysResx)

    @handler GetKeyCountHandler
    get /v2/keys () returns (PreKeyCount)

    @handler PutProfileKeyHandler
    put /v1/profile/:accountName (PutProfileKeyReq) returns()

    @handler GetProfileKeyHandler
    get /v1/profile/:accountName  (GetProfileKeyReq) returns(GetProfileKeyRes)


}
