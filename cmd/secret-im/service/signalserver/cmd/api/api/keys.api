syntax = "v2"

type PreKeyx{
    KeyId int64 `json:"keyId"`
    PublicKey string `json:"publickey"`

}
type SignedPrekeyx{
    Signature string  `json:"signature"`
    PreKey PreKeyx `json:"prekey"`
}


type PutKeysReqx{
    IdentityKey string  `json:"identityKey"`
    SignedPreKey SignedPrekeyx `json:"signedPreKey"`
    PreKeys []PreKeyx `json:"prekeys"`
}

type GetKeysReq{
    Identifier string `path:"identifier"`
    DeviceId int64 `path:"deviceId"`
}


type PreKeyResponseItem{
    DeviceId int64 `json:"deviceId"`
    RegistrationId int64 `json:"registrationId"`
    PreKey PreKeyx `json:"preKey"`
    SignedPrekey SignedPrekeyx `json:"signedPreKey"`

}
type GetKeysResx{
    IdentityKey string `json:"identityKey"`
    Devices []PreKeyResponseItem `json:"devices"`
}




@server(
    jwt: Auth
    middleware:UserNameCheck
    group: textsecret_keys

)
service signalserver-api {
    @handler PutKeysHandler
    put /api/v1/textsecret/keys (PutKeysReqx) returns ()

    @handler GetKeysHandler
    get /api/v1/textsecret/keys/:identifier/:deviceId (GetKeysReq) returns (GetKeysResx)

}
