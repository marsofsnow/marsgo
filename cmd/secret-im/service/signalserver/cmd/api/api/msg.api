syntax = "v2"
type  IncomingMsg {
    Type int `json:"type"`
    Destination string `json:"destination"`
    DestinationDeviceId int64 `json:"destinationDeviceId"`
    DestinationRegistrationId int `json:"destinationRegistrationId"`
    Body string `json:"body"`
    Relay string `json:"relay"`
    Silent bool `json:"silent"`
    Content string `json:"content"`
}



type (
    PutMsgsSendReq{
        Destination string  `path:"destination"` //收件人的手机号
        MsgList []IncomingMsg `json:"msgList"`   // 消息列表，可以多条消息一块发出
        Relay string `json:"relay"`
        Timestamp int64 `json:"timestamp"`
    }
    PutMsgSendRes{
        Resp interface{} `json:"resp"`
    }

    PostMsgsPendingReq{
        PageIndex int `json:"pageIndex"`
        PageSize  int  `json:"pageSize"`
        Destination string `json:"destination"`
    }

    PostMsgsPendingRes{
        Total int `json:"total"`
        PageSize int `json:"pageSize"`
        PageIndex int `json:"pageIndex"`
        List interface{} `json:"List"`
    }
)

@server(
    middleware : CheckBasicAuth
    group: msgs
)
service signalserver-api {
    @handler PutMsgsSendHandler
    put /v1/messages/:destination (PutMsgsSendReq) returns (PutMsgSendRes)

    @handler PostMsgsPendingHandler
    post /v1/messages (PostMsgsPendingReq) returns (PostMsgsPendingRes)
}