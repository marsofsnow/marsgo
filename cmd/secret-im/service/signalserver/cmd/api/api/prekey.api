syntax = "v2"


type PreKey{
    KeyId int64 `json:"keyId"`
    PublicKey string `json:"publicKey"`
}
type SignedPrekey{
    Signature string  `json:"signature"`
    KeyId int64       `json:"keyId"`
    PublicKey string  `json:"publicKey"`
}


type PutKeysReq{
    IdentityKey string        `json:"identityKey"`
    SignedPreKey SignedPrekey `json:"signedPreKey"`
    PreKeys []PreKey          `json:"preKeys"`
}

type GetKeysReqx{
    Identifier string `path:"identifier"`
    DeviceId string `path:"deviceId"`
}


type PreKeyResponseItemx{
    DeviceId int64 `json:"deviceId"`
    RegistrationId int64 `json:"registrationId"`
    PreKey PreKey `json:"preKey"`
    SignedPrekey SignedPrekey `json:"signedPreKey"`

}
type GetKeysRes{
    IdentityKey string `json:"identityKey"`
    Devices []PreKeyResponseItemx `json:"devices"`
}

type PreKeyCountx {
    Count int `json:"count"`
}








@server(
    //jwt: Auth
    middleware : CheckBasicAuth
    group: keys

)
service signalserver-api {

   // 设置密钥
    @handler PutKeysHandler
    put  /v3/keys (PutKeysReq) returns ()
    // 获取密钥数量
    @handler GetKeyCountHandler
    get /v3/keys () returns (PreKeyCountx)

    // 获取设备密钥
    @handler GetDeviceKeysHandler
    get /v3/keys/:identifier/:deviceId (GetKeysReqx) returns (GetKeysRes)

    // 设置已签名密钥
    @handler SetSignedKeyHandler
    put /v3/keys/signed (SignedPrekey) returns ()

    // 获取已签名密钥
    @handler GetSignedKeyHandler
    get /v3/keys/signed () returns (SignedPrekey)
}

