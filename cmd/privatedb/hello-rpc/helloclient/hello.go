// Code generated by goctl. DO NOT EDIT!
// Source: hello.proto

//go:generate mockgen -destination ./hello_mock.go -package helloclient -source $GOFILE

package helloclient

import (
	"context"

	"privatedb/hello-rpc/hello"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	Request  = hello.Request
	Response = hello.Response
	AddReq   = hello.AddReq
	AddResp  = hello.AddResp

	Hello interface {
		Ping(ctx context.Context, in *Request) (*Response, error)
		Add(ctx context.Context, in *AddReq) (*AddResp, error)
	}

	defaultHello struct {
		cli zrpc.Client
	}
)

func NewHello(cli zrpc.Client) Hello {
	return &defaultHello{
		cli: cli,
	}
}

func (m *defaultHello) Ping(ctx context.Context, in *Request) (*Response, error) {
	client := hello.NewHelloClient(m.cli.Conn())
	return client.Ping(ctx, in)
}

func (m *defaultHello) Add(ctx context.Context, in *AddReq) (*AddResp, error) {
	client := hello.NewHelloClient(m.cli.Conn())
	return client.Add(ctx, in)
}
